-- $zero
-- $0 - 5 preallocated
-- $to AKA $6 free for use

-- store 0x0010 into 0x0000 for later usage in if statement
-- **NOTE ALL OF THESE ARE INCREMENTED FROM COMMENTS AS $ZERO IS $0 IN OUR DESIGN** 

--addi $6, $zero, 000100;
0 => X"11C4",   -- 0001 000 111 000100 

-- sll $6, $6, 4;
1 => X"8FC4",  -- 1000 111 111 000100   

-- or $0, $6, $0;
2 => X"0C02",  -- 0000 111 000 000 010 

-- addi $6, $zero, 000001;
3 => X"11C1",  -- 0001 000 111 000001

-- sll $6, $6, 15;
4 => X"7FCF",  -- 0111 111 111 001111  

-- or $1, $6, $1;
5 => X"0E92",  -- 0000 111 010 010 010  

-- addi $6, $zero, 000001;
6 => X"11C1",   -- 0001 000 111 000001      

-- or $1, $6, $1;
7 => X"0E92",   -- 0000 111 010 010 010 

-- addi $6, $zero, 111111;
8 => X"11FF",   -- 0001 000 111 111111    

-- sll $6, $6, 2;
9 => X"7FC2",   -- 0111 111 111 000010   

-- or $2, $6, $2;
10 => X"0EDA",   -- 0000 111 011 011 010  

-- addi $6, $zero, 000011;
11 => X"11C3",   -- 0001 000 111 000011       

-- or $2, $6, $2;
12 => X"0EDA",   -- 0000 111 011 011 010          

-- addi $6, $zero, 111111;
13 => X"11FF",   -- 0001 000 111 111111   

-- sll $6, $6, 2;
14 => X"7FC2",   -- 0111 111 111 000010 

-- or $3, $6, $3;
15 => X"0F22",   -- 0000 111 100 100 010 

-- addi $6, $zero, 000011;
16 => X"11C3",   -- 0001 000 111 000011

-- or $3, $6, $3;
17 => X"0F22",   -- 0000 111 100 100 010 

-- sll $3, $3, 7;
18 => X"7907",   -- 0111 100 100 000111 

-- addi $6, $zero, 000001;
19 => X"11C1",   -- 0001 000 111 000001 

-- sll $6, $6, 7;
20 => X"7FC7",   -- 0111 111 111 000111   

-- or $4, $4, $6;
21 => X"0BEA",   -- 0000 101 111 101 010 

-- addi $6, $zero, 000101;
22 => X"11C5",   -- 0001 000 111 000101

-- or $5, $5, $6;
23 => X"0DF2",   -- 0000 110 111 110 010 

-- WHILE: sgt $6, $5, $zero 
24 => X"0C3C",   -- 0000 110 000 111 100  

--beq $6, $zero, ENDLABEL
25 => X"B1XX",   -- 1011 000 111 ENDLABEL     

-- subi $5, $5, 1
26 => X"9D81",   -- 1001 110 110 000001 

-- lw $6, 0($4);
27 => X"2BC0",   -- 0010 101 111 000000  

--sw $4, 0($zero);
28 => X"3A00", -- 0011 101 000 000000   

--addi $4, $zero 000001; 
29 => X"1141", -- 0001 000 101 000001   

-- sll $4, $4, 8;
30 => X"7B48", -- 0111 101 101 001000 

-- sgt $6, $6, $4; 
31 => X"0F7C", -- 0000 111 101 111 100

-- lw $4, 0($zero);
32 => X"2140", -- 0010 000 101 000000 

--beq $6, $zero, ELSESTATEMENT
33 => X"B1XX", -- 1011 000 111 ELSESTATEMENT   

-- srl $0, $0, 8;
34 => X"8008", -- 1000 000 000 001000  

-- or $1, $1, $0;
35 => X"040A", -- 0000 010 000 001 010

-- addi $6, $zero, 001111;
36 => X"11CF", -- 0001 000 111 001111

-- sll $6, $6, 4;
37 => X"7FC4", -- 0111 111 111 000100

-- addi $6, $6, 001111;
38 => X"1FCF", -- 0001 111 111 001111

--  sll $6, $6, 8;
39 => X"7FC8", -- 0111 111 111 001000

-- sw $6, 0($4)
40 => X"3F00", -- 0011 111 100 000000

-- j ENDIF;
41 => X"6XXX", -- 0110 ENDIF 

-- ELSESTATEMENT: 	sll $2, $2, 2;
42 => X"76C2", -- 0111 011 011 000010

-- xor $3, $3, $2
43 => X"08E6", -- 0000 100 011 100 110 

-- addi $6, $zero, 001111;
44 => X"11CF", -- 0001 000 111 001111

-- sll $6, $6, 4;
45 => X"7FC4", -- 0111 111 111 000100

-- addi $6, $6, 001111;
46 => X"1FCF", -- 0001 111 111 001111

-- sw $6, 0($4)
47 => X"3F40", -- 0011 111 101 000000 


-- ENDIF: addi $4, $4, 2
48 => X"1B42", -- 0001 101 101 000010

-- j WHILE
49 => X"6XXX", -- 0110 WHILE

(AKA 50) ENDLABEL: 
//program done

